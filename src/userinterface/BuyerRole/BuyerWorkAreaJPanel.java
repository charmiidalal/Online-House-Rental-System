/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.BuyerRole;

import Business.Buyer.Buyer;
import Business.Buyer.BuyerDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Order.Order;
import Business.Seller.Seller;
import Business.Seller.SellerDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dinesh
 */
public class BuyerWorkAreaJPanel  {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private SellerDirectory sellerDirectory;
    /**
     * Creates new form BuyerWorkAreaJpanel
     */
    public BuyerWorkAreaJPanel(JPanel userProcess, EcoSystem ecosystem, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer=userProcess;
        this.business= ecosystem;
        this.userAccount= userAccount;
        populateRequestTable();
    }

   

    

      public void populateRequestTable(){
     DefaultTableModel model = (DefaultTableModel) houseTable.getModel();
        model.setRowCount(0);
        for(Seller seller: sellerDirectory.getSellerList()){
                    Object[] row = new Object[4];
                    row[0] = seller.getSellerName();
                    row[1] = seller.getSellerNo();
                    row[2] = seller.getSellerStreet();
                    row[3] = seller.getSellerZipcode();
                    model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewBtn = new javax.swing.JButton();
        buyBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        houseTable = new javax.swing.JTable();

        viewBtn.setText("View Details");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        buyBtn.setText("Buy House");
        buyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyBtnActionPerformed(evt);
            }
        });

        houseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "BHK", "Bathroom"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(houseTable);
        if (houseTable.getColumnModel().getColumnCount() > 0) {
            houseTable.getColumnModel().getColumn(0).setResizable(false);
            houseTable.getColumnModel().getColumn(1).setResizable(false);
            houseTable.getColumnModel().getColumn(2).setResizable(false);
            houseTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(144, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
            .addGroup(layout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addComponent(buyBtn)
                .addGap(140, 140, 140)
                .addComponent(viewBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyBtn)
                    .addComponent(viewBtn))
                .addContainerGap(193, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
       int selectedRow = houseTable.getSelectedRow();
         
       
        int count = houseTable.getSelectedRowCount();
        if(count == 1){
             if (selectedRow >= 0) {
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            String Id = (String) houseTable.getValueAt(selectedRow,0);
            Seller foodItem = sellerDirectory.fetchSeller(Id);
            ViewDetailsJPanel viewJPanel = new ViewDetailsJPanel(userProcessContainer, foodItem, sellerDirectory);
            userProcessContainer.add(viewJPanel);
            layout.next(userProcessContainer);
        }
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
                                         

        
    }//GEN-LAST:event_viewBtnActionPerformed

    private void buyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyBtnActionPerformed
        int row = houseTable.getSelectedRow();
           if(row >= 0){

            Buyer buyer;//chang this
            
            buyer = BuyerDirectory.getBuyer(userAccount.getEmployee().getName());
            Seller seller = sellerDirectory.getSellerByIndex(row);
            String status = "Awaiting";
            
            Order orderRequest = business.getOrderDirectory().addOrder();
            orderRequest.setOrderId("O"+(business.getOrderDirectory().getOrderDirectory().size()));
            orderRequest.setSeller(seller);
            
            orderRequest.setBuyer(buyer);
            orderRequest.setMessage("Request placed");            
            orderRequest.setSender(userAccount);
            orderRequest.setStatus(status);
            business.getWorkQueue().getWorkRequestList().add(orderRequest);
            JOptionPane.showMessageDialog(null, "Your Order has been sucessfully placed!");
            populateRequestTable();
        } 
        
        else{
            JOptionPane.showMessageDialog(null, "Please select one row!");
}
    }//GEN-LAST:event_buyBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buyBtn;
    private javax.swing.JTable houseTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
